apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: spin-halyard
  namespace: SPINNAKER_NAMESPACE 
  labels:
    app: spin
    stack: halyard
spec:
  replicas: 1
  selector:
    matchLabels:
      app: spin
      stack: halyard
  template:
    metadata:
      labels:
        app: spin
        stack: halyard
    spec:
      containers:
      - name: halyard-daemon
        # todo - make :stable or digest of :stable
        image: example/halyard:stable
        imagePullPolicy: IfNotPresent
        command:
        - /bin/sh
        args:
        - -c
        - "cp -R /home/builder/staging/.hal /home/spinnaker/.hal; /opt/halyard/bin/halyard"
        readinessProbe:
          exec:
            command:
            - wget
            - -q
            - --spider
            - http://localhost:8064/health
        ports:
        - containerPort: 8064
        volumeMounts:
        - name: halconfig
          mountPath: /home/builder/staging/.hal/config
          subPath: config
        - name: kubeconfig
          mountPath: /home/builder/staging/.kube/config
          subPath: config
        - name: artifactsconfig
          mountPath: /home/builder/staging/.hal/default/service-settings/gate.yml
          subPath: gate.yml
        - name: artifactsconfig
          mountPath: /home/builder/staging/.hal/default/profiles/front50-local.yml
          subPath: front50-local.yml
        - name: artifactsconfig
          mountPath: /home/builder/staging/.hal/default/service-settings/redis.yml
          subPath: redis.yml
      volumes:
      - name: halconfig
        configMap:
          defaultMode: 420
          name: halconfig
      - name: kubeconfig
        secret:
          defaultMode: 420
          secretName: kubeconfig
      - name: artifactsconfig
        configMap: 
          defaultMode: 420
          name: artifactsconfig

---

apiVersion: v1
kind: Service
metadata:
  name: spin-halyard
  namespace: SPINNAKER_NAMESPACE 
spec:
  ports:
    - port: 8064
      targetPort: 8064
      protocol: TCP
  selector:
    app: spin
    stack: halyard
  type: ClusterIP
  
---

apiVersion: v1
kind: ConfigMap
metadata:
  namespace: SPINNAKER_NAMESPACE
  name: artifactsconfig
data:
  front50-local.yml: |
    spinnaker.s3.versioning: false
  redis.yml: |
    artifactId: example/redis:v3
    enabled: true
  gate.yml: |
    host: 0.0.0.0
  deck.yml: |
    host: 0.0.0.0
